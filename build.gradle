buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
		mavenLocal()
        maven { url = 'https://maven.parchmentmc.org' }
        maven {url='https://repo.spongepowered.org/repository/maven-public'}
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1+', changing: true
        classpath group: 'org.spongepowered', name:'mixingradle', version: '0.7-SNAPSHOT', changing: true
        classpath 'org.parchmentmc:librarian:1.+'
    }
}
plugins {
    id 'com.matthewprenger.cursegradle' version '1.4.0'
}
apply plugin: 'net.minecraftforge.gradle'
//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.parchmentmc.librarian.forgegradle'
apply plugin: 'org.spongepowered.mixin'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

boolean dev = System.getenv('RELEASE') == null || System.getenv('RELEASE').equals('false');
ext.buildnumber = System.getenv().BUILD_NUMBER ?: 'custom';

group = 'com.tterrag.blur'
archivesBaseName = "Blur"
version = "${mod_version}-${buildnumber}"

minecraft {
    mappings channel: 'parchment', version: '2022.06.19-1.18.2'
    
    accessTransformer = file('src/main/resources/META-INF/at.cfg')

    // default run configurations.
    // these can be tweaked, removed, or duplicated as needed.
	runs {
        client {
            workingDirectory project.file('run')
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                blur {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                blur {
                    source sourceSets.main
                }
            }
        }
    }
}

def resourceTargets = ['META-INF/mods.toml', 'pack.mcmeta']
def intoTargets = ["$rootDir/out/production/resources/", "$rootDir/out/production/${project.name}.main/", "$rootDir/bin/main/"]
def replaceProperties = ['version': project.version, 'minecraft_version': project.minecraft_version, 'forge_version': project.forge_version]
processResources {
    inputs.properties replaceProperties
    replaceProperties.put 'project', project

    filesMatching(resourceTargets) {
        expand replaceProperties
    }

    intoTargets.each { target ->
        if (file(target).exists()) {
            copy {
                from(sourceSets.main.resources) {
                    include resourceTargets
                    expand replaceProperties
                }
                into target
            }
        }
    }
    exclude '**/Thumbs.db'

}


jar {
    manifest {
        attributes(["Specification-Title": "blur",
                    "Specification-Vendor": "cheaterpaul",
                    "Specification-Version": "1.0",
                    "Implementation-Title": project.name,
                    "Implementation-Version": "${version}",
                    "Implementation-Vendor" :"cheaterpaul",
                    "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")],)
    }
}

repositories {
	jcenter()
}

dependencies {
    minecraft 'net.minecraftforge:forge:' + minecraft_version + '-' + forge_version

    if (System.getProperty("idea.sync.active") != "true") {
        annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
    }
}

tasks.curseforge.enabled = !dev && project.hasProperty('curseforge_key')
    
curseforge {
    if (project.hasProperty('curseforge_key')) {
        apiKey = project.curseforge_key
    }

    project {
        id = project.project_id
        changelog = System.getenv('CHANGELOG') == null || System.getenv('CHANGELOG').equals('none') ? '' : System.getenv('CHANGELOG')
        changelogType = 'html'
        releaseType = project.release_type
		addGameVersion '1.18.2'
        mainArtifact(jar) {
            displayName = archivesBaseName + " - ${version}"
        }
    }
}

// https://github.com/SpongePowered/Mixin/wiki/Mixins-on-Minecraft-Forge
mixin {
    add sourceSets.main, "blur.refmap.json"
    config 'blur.mixins.json'

    debug.verbose = true
    debug.export = true
}