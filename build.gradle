buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
		mavenLocal()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}
plugins {
    id 'io.franzbecker.gradle-lombok' version '2.0'
}
apply plugin: 'net.minecraftforge.gradle'
//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

boolean dev = System.getenv('RELEASE') == null || System.getenv('RELEASE').equals('false');
ext.buildnumber = System.getenv().BUILD_NUMBER ?: 'custom';

group = 'com.tterrag.blur'
archivesBaseName = "Blur"
version = "${mod_version}-${buildnumber}"

minecraft {
    mappings channel: 'snapshot', version: '20191106-1.14.3'
    
    //accessTransformer = file('my_at.cfg')

    // default run configurations.
    // these can be tweaked, removed, or duplicated as needed.
	runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                blur {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                blur {
                    source sourceSets.main
                }
            }
        }
    }
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property 'version', project.version
    inputs.property 'mcversion', minecraft_version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'META_INF/mods.toml'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion': minecraft_version
    }

    // copy everything else except the mods.toml
    from(sourceSets.main.resources.srcDirs) {
        exclude 'META_INF/mods.toml'
    }
}

jar {
    manifest {
        attributes(["Specification-Title": "blur",
                    "Specification-Vendor": "tterrag",
                    "Specification-Version": "1.0",
                    "Implementation-Title": project.name,
                    "Implementation-Version": "${version}",
                    "Implementation-Vendor" :"tterrag",
                    "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")],)
    }
}

repositories {
	jcenter()
}

dependencies {
    minecraft 'net.minecraftforge:forge:' + minecraft_version + '-' + forge_version
}
